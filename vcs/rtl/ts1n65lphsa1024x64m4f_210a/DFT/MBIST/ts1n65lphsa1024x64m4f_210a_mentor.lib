 //*******************************************************************************
//*        Software       : TSMC MEMORY COMPILER 2010.02.00.a.210a
//*        Technology     : 65nm CMOS LOGIC Low Power LowK Cu 1P9M 1.2V
//*                         Standard-Vt logic, High Density SRAM 6T bit cell
//*        Memory Type    : TSMC 65nm Low Power SP SRAM Without Redundancy
//*        Library Name   : ts1n65lphsa1024x64m4f_210a ( user specify: TS1N65LPHSA1024X64M4F)
//*        Generated Time : 2022/02/24, 21:11:02
//*******************************************************************************
//* Template Version : S_07_32901                                        
//*******************************************************************************
//*
//*STATEMENT OF USE
//*
//*This information contains confidential and proprietary information of TSMC.
//*No part of this information may be reproduced, transmitted, transcribed,
//*stored in a retrieval system, or translated into any human or computer
//*language, in any form or by any means, electronic, mechanical, magnetic,
//*optical, chemical, manual, or otherwise, without the prior written permission
//*of TSMC. This information was prepared for informational purpose and is for
//*use by TSMC's customers only. TSMC reserves the right to make changes in the
//*information at any time and without notice.
//*
//*******************************************************************************

model TS1N65LPHSA1024X64M4F (
            CLK, CEB, WEB,

                        A, D, BWEB,
                        

                        WTSEL,
                        RTSEL,
                        Q)


//parameter numWord = 1024;
//parameter numRow = 256;
//parameter numCM = 4;
//parameter numBit = 64;
//parameter numWordAddr = 10;
//parameter numRowAddr = 8;
//parameter numCMAddr = 2;


    (
    
    bist_definition(

    address  A (array = 9 : 0;);
        data_in  D (array = 63 : 0;);
        data_out Q (array = 63 : 0;);
        write_enable WEB low;
        chip_enable CEB high;
        clock CLK high;
        control BWEB (array = 63 : 0;) high;
    dont_touch WTSEL (array = 2 : 0;) high input;
    dont_touch RTSEL (array = 1 : 0;) high input;
        min_address = 0;
        max_address = 1023;
        data_size = 64;
        addr_inc = 4;

        
//        repair logical_column 1 bits;
 
  read_write_port(
        read_cycle (
            change A ;
            wait ;
            assert CLK ;
            wait ;
            expect Q move ;
         )    
         write_cycle (
            assert WEB ;
        change A ;
            change D ;
            wait ;
        )
    )
  )
)

